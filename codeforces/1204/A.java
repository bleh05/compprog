import java.util.*;

import javax.imageio.ImageIO;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.image.BufferedImage;
import java.io.*;
import java.math.BigInteger;
public class template {
	public static void main(String[] args) throws Exception {
		FastScanner sc = new FastScanner();
		PrintWriter pw = new PrintWriter(System.out);
		BigInteger a = new BigInteger("1");
		String[] arr = {
				"1","100",
				"10000",
				"1000000",
				"100000000",
				"10000000000",
				"1000000000000",
				"100000000000000",
				"10000000000000000",
				"1000000000000000000",
				"100000000000000000000",
				"10000000000000000000000",
				"1000000000000000000000000",
				"100000000000000000000000000",
				"10000000000000000000000000000",
				"1000000000000000000000000000000",
				"100000000000000000000000000000000",
				"10000000000000000000000000000000000",
				"1000000000000000000000000000000000000",
				"100000000000000000000000000000000000000",
				"10000000000000000000000000000000000000000",
				"1000000000000000000000000000000000000000000",
				"100000000000000000000000000000000000000000000",
				"10000000000000000000000000000000000000000000000",
				"1000000000000000000000000000000000000000000000000",
				"100000000000000000000000000000000000000000000000000",
				"10000000000000000000000000000000000000000000000000000",
				"1000000000000000000000000000000000000000000000000000000",
				"100000000000000000000000000000000000000000000000000000000",
				"10000000000000000000000000000000000000000000000000000000000",
				"1000000000000000000000000000000000000000000000000000000000000",
				"100000000000000000000000000000000000000000000000000000000000000",
				"10000000000000000000000000000000000000000000000000000000000000000",
				"1000000000000000000000000000000000000000000000000000000000000000000",
				"100000000000000000000000000000000000000000000000000000000000000000000",
				"10000000000000000000000000000000000000000000000000000000000000000000000",
				"1000000000000000000000000000000000000000000000000000000000000000000000000",
				"100000000000000000000000000000000000000000000000000000000000000000000000000",
				"10000000000000000000000000000000000000000000000000000000000000000000000000000",
				"1000000000000000000000000000000000000000000000000000000000000000000000000000000",
				"100000000000000000000000000000000000000000000000000000000000000000000000000000000",
				"10000000000000000000000000000000000000000000000000000000000000000000000000000000000",
				"1000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
				"100000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
				"10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
				"1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
				"100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
				"10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
				"1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
				"100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
				"10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"};
		ArrayList<String> b = new ArrayList<String>(Arrays.asList(arr));
		String s;
		b.add(s=sc.nextToken());
		b.sort(Comparator.comparing(String::length).thenComparing(String::compareToIgnoreCase));
		for(int i=0;i<b.size();i++) {
		if(b.get(i).equals(s)){
			pw.println(i);
			break;
		}
		}
		pw.close();
	}
}
@SuppressWarnings("all")
class FastScanner {
    BufferedReader br;
    StringTokenizer st;
    public FastScanner(BufferedReader d) {
        br=d;
    }
    public FastScanner(String s) {
        try {
            br = new BufferedReader(new FileReader(s));
        } catch (FileNotFoundException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }
    }
 
    public FastScanner() {
        br = new BufferedReader(new InputStreamReader(System.in));
    }
 
    String nextToken() {
        while (st == null || !st.hasMoreElements()) {
            try {
                st = new StringTokenizer(br.readLine());
            } catch (IOException e) {
                // TODO Auto-generated catch block
                e.printStackTrace();
            }
        }
        return st.nextToken();
    }
 
    int nextInt() {
        return Integer.parseInt(nextToken());
    }
 
    long nextLong() {
        return Long.parseLong(nextToken());
    }
 
    double nextDouble() {
        return Double.parseDouble(nextToken());
    }
}